% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ERutilities.R
\name{EquiEquate}
\alias{EquiEquate}
\title{Perform Equipercentile Equating}
\usage{
EquiEquate(nsy, miny, incy, crfdy, nsx, prdx, eraw)
}
\arguments{
\item{nsy}{An integer, the number of score categories for the old form `Y`.}

\item{miny}{A numeric value, the minimum score for form `Y`.}

\item{incy}{A numeric value, the increment between scores for form `Y`.}

\item{crfdy}{A numeric vector of the cumulative relative frequency
distribution for form `Y`.}

\item{nsx}{An integer, the number of score categories for the new form `X`.}

\item{prdx}{A numeric vector of the percentile ranks for each score on
form `X`.}
}
\value{
A numeric vector of equated raw scores on the `Y` scale.
}
\description{
Computes the equipercentile equivalents for a set of new form scores (`X`)
on the scale of an old form (`Y`).
}
\details{
This function takes the percentile ranks of the new form scores and finds the
corresponding scores on the old form's scale using the `perc_point` function.
This is a direct implementation of the equipercentile equating method.
}
\examples{
# Example data from Kolen & Brennan (2004), Table 2.4
# Form X distribution
freqs_x <- c(1, 2, 5, 8, 10, 15, 12, 8, 5, 3, 1)
min_x <- 0; max_x <- 10; inc_x <- 1
ns_x <- nscores(max_x, min_x, inc_x)
crfd_x <- cumsum(freqs_x / sum(freqs_x))
prd_x <- perc_rank(x = 0:10, min = min_x, max = max_x, inc = inc_x, crfd = crfd_x)

# Form Y distribution
freqs_y <- c(1, 3, 6, 9, 12, 14, 11, 7, 4, 2, 1)
min_y <- 0; max_y <- 10; inc_y <- 1
ns_y <- nscores(max_y, min_y, inc_y)
crfd_y <- cumsum(freqs_y / sum(freqs_y))

# Perform equating
equated_scores <- EquiEquate(nsy = ns_y, miny = min_y, incy = inc_y,
                             crfdy = crfd_y, nsx = ns_x, prdx = prd_x)
print(data.frame(x_score = 0:10, equated_y = equated_scores))
}
\seealso{
\code{\link{perc_point}}, \code{\link{perc_rank}}
}
\author{
R. L. Brennan (Original C code), Google's Gemini (R translation)
}
