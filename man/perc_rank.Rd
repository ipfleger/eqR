% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ERutilities.R
\name{perc_rank}
\alias{perc_rank}
\title{Compute Percentile Rank from a Cumulative Distribution}
\usage{
perc_rank(x, min, max, inc, crfd)
}
\arguments{
\item{x}{A numeric vector of scores for which to calculate percentile ranks.}

\item{min}{A numeric value for the minimum score in the sequence.}

\item{max}{A numeric value for the maximum score in the sequence.}

\item{inc}{A numeric value for the increment between scores.}

\item{crfd}{A numeric vector of the cumulative relative frequency
distribution. The length of this vector should be `nscores(max, min, inc)`.}
}
\value{
A numeric vector of percentile ranks (0-100).
}
\description{
This function computes the percentile rank for a given score `x` using a
cumulative relative frequency distribution (`crfd`). It performs linear
interpolation between the points of the distribution, consistent with the
methodology described in Kolen & Brennan (2004). This is an R translation
of the `perc_rank` function from the "Equating Recipes" C code.
}
\details{
This function uses R's built-in `approxfun()` to create a linear
interpolation function. The points for interpolation are defined by the
score scale (`min`, `max`, `inc`) and the provided cumulative relative
frequencies (`crfd`). The score points are treated as the midpoints of
intervals that are `inc` wide.

The function is vectorized and can compute percentile ranks for multiple
`x` values at once.
}
\examples{
scores <- seq(0, 10)
freqs <- c(1, 2, 5, 8, 10, 15, 12, 8, 5, 3, 1)
rel_freqs <- freqs / sum(freqs)
cum_rel_freqs <- cumsum(rel_freqs)

# Calculate percentile rank for a single score
perc_rank(x = 5.5, min = 0, max = 10, inc = 1, crfd = cum_rel_freqs)

# Calculate for multiple scores
perc_rank(x = c(2, 5.5, 9), min = 0, max = 10, inc = 1, crfd = cum_rel_freqs)
}
\author{
R. L. Brennan (Original C code), Google's Gemini (R translation)
}
