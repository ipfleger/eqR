% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CubicSpline.R
\name{chsol}
\alias{chsol}
\title{Solve a Linear System using Cholesky Decomposition}
\usage{
chsol(a, b)
}
\arguments{
\item{a}{A symmetric, positive-definite numeric matrix.}

\item{b}{A numeric vector.}
}
\value{
A numeric vector `x` which is the solution to the system.
}
\description{
Solves the linear system `a %*% x = b` for `x`, where `a` is a symmetric,
positive-definite matrix. It uses Cholesky decomposition (`a = R'R`),
followed by forward and backward substitution. This function combines the
logic of `dpdch`, `subfd`, and `subbk`.
}
\details{
The process involves two steps:
1. Solve `R' * y = b` for `y` using forward substitution.
2. Solve `R * x = y` for `x` using backward substitution.

This is a more direct R translation of the `chsol` C function. For general
use in R, `solve(a, b)` is often more direct.
}
\examples{
A <- matrix(c(4, 12, -16, 12, 37, -43, -16, -43, 98), nrow = 3)
b_vec <- c(4, 1, 2)
x_sol <- chsol(A, b_vec)
print(x_sol)
# Verify the solution: A \%*\% x_sol should be close to b_vec
print(A \%*\% x_sol)
}
\author{
Jaehoon Seol (Original C code), Google's Gemini (R translation)
}
