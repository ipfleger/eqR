% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ERutilities.R
\name{perc_point}
\alias{perc_point}
\title{Compute Percentile Point (Score) from a Percentile Rank}
\usage{
perc_point(pr, ns, min, inc, crfd)
}
\arguments{
\item{pr}{A numeric vector of percentile ranks (0-100) for which to find
the corresponding scores.}

\item{ns}{An integer, the total number of score categories.}

\item{min}{A numeric value for the minimum score in the sequence.}

\item{inc}{A numeric value for the increment between scores.}

\item{crfd}{A numeric vector of the cumulative relative frequency
distribution. The length of this vector should be `ns`.}
}
\value{
A numeric vector of scores corresponding to the given percentile ranks.
}
\description{
This function computes the score (percentile point) corresponding to a given
percentile rank (`pr`). It uses a cumulative relative frequency distribution
(`crfd`) and implements the two-step linear interpolation method described in
Kolen & Brennan (2004, pp. 45-46). This is the inverse of the `perc_rank`
function.
}
\details{
The function calculates an "upper" and "lower" percentile point and averages
them to produce the final result. This specific methodology ensures results
are consistent with the original C library. The function is vectorized and
can compute scores for multiple percentile ranks at once.
}
\examples{
# Setup a sample distribution
freqs <- c(1, 2, 5, 8, 10, 15, 12, 8, 5, 3, 1)
rel_freqs <- freqs / sum(freqs)
cum_rel_freqs <- cumsum(rel_freqs)

# Find the score corresponding to the 50th percentile
perc_point(pr = 50, ns = 11, min = 0, inc = 1, crfd = cum_rel_freqs)

# Find scores for multiple percentile ranks
perc_point(pr = c(25, 50, 75), ns = 11, min = 0, inc = 1, crfd = cum_rel_freqs)
}
\seealso{
\code{\link{perc_rank}}
}
\author{
R. L. Brennan (Original C code), Google's Gemini (R translation)
}
