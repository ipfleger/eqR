% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/equate_recipe.R
\name{add_method}
\alias{add_method}
\title{Add an equating method to a recipe}
\usage{
add_method(equate_recipe, method, type = "default", smooth = "none", ...)
}
\arguments{
\item{equate_recipe}{An object of class `equate_recipe`.}

\item{method}{A character string specifying the primary equating method.
Can be `"linear"`, `"equipercentile"`, or `"irt"`.}

\item{type}{A character string specifying the calculation type or sub-method,
which is particularly relevant for the common-item nonequivalent groups
design. Defaults to the most common type for the selected method. See the
"Method and Type Details" section for all available options.}

\item{smooth}{A character string specifying the smoothing procedure.
Defaults to `"none"`. See the "Smoothing & Optional Arguments" section for details.}

\item{...}{Additional named arguments passed to the method or smoothing function.
See the "Smoothing & Optional Arguments" section for details.}
}
\value{
The updated `equate_recipe` object with the new method added.
}
\description{
This function adds a specific equating method, including its calculation type
and smoothing options, to an `equate_recipe` object. You can add multiple
methods to a single recipe, and they will all be executed by `run_equating()`.
}
\section{Method and Type Details}{

The `type` argument selects a specific statistical procedure. Its valid values
depend on the `method` and the `design` set in the recipe.

\strong{`method = "linear"`}
\itemize{
  \item For \strong{Single Group (`SG`) and Random Groups (`RG`)} designs:
  \itemize{
    \item `type = "linear"` (Default): Matches the means and standard deviations of the two forms.
    \item `type = "mean"`: Matches only the means, equivalent to setting `mean_only = TRUE`.
  }
  \item For \strong{Common-Item (`CG`)} design:
  \itemize{
    \item `type = "tucker"` (Default): The classic Tucker method for CINEG.
    \item `type = "levine_observed"`: The Levine observed score method.
    \item `type = "levine_true"`: The Levine true score method, which requires an internal anchor.
    \item `type = "chained"`: Chained linear equating through the anchor test.
    \item You can also provide a vector of types, e.g., `type = c("tucker", "chained")`, to run multiple methods at once.
  }
}

\strong{`method = "equipercentile"`}
\itemize{
  \item For \strong{Single Group (`SG`) and Random Groups (`RG`)} designs, the `type` argument is ignored. The standard equipercentile equating procedure is used.
  \item For \strong{Common-Item (`CG`)} design:
  \itemize{
    \item `type = "frequency"` (Default): The Frequency Estimation method.
    \item `type = "chained"`: The Chained Equipercentile method.
  }
}
}

\section{Smoothing & Optional Arguments}{

The `smooth` argument selects a procedure to smooth the score distributions.
Optional parameters for both smoothing and equating methods can be passed via `...`.

\strong{Smoothing Procedures}
\itemize{
  \item \code{smooth = "none"}: (Default) No smoothing is applied.
  \item \code{smooth = "beta_binomial"}: Four-parameter beta-binomial smoothing.
    \itemize{
      \item \code{nparm}: The number of parameters for the beta distribution (2 or 4). Integer. *Default: \code{4}*.
      \item \code{rel}: The reliability of the test (e.g., KR-20). Numeric. *Default: \code{0.85}*.
    }
  \item \code{smooth = "log_linear"}: Univariate log-linear presmoothing.
    \itemize{
      \item \code{degree}: The degree of the polynomial to fit. Integer. *Default: \code{3}*.
    }
  \item \code{smooth = "cubic_spline"}: Post-smoothing using cubic splines.
    \itemize{
      \item \code{s}: The smoothing parameter. Numeric. *Default: \code{0.2}*.
    }
  \item \code{smooth = "kernel"}: Kernel equating, which uses a continuized score distribution.
}

\strong{Linear Method Options}
\itemize{
  \item \code{mean_only}: Sets the slope to 1 to perform mean equating. Logical. *Default: \code{FALSE}*.
  \item \code{w1}: For linear CG methods, the weight given to population 1 in the synthetic population. Numeric. *Default: \code{1}*.
  \item \code{internal_anchors}: For linear CG methods, specifies if the anchor test is internal. Logical. *Default: \code{TRUE}*.
}

\strong{General Score Scale Options}
\itemize{
  \item \code{min_x}, \code{max_x}, \code{inc_x}: Manually set the score scale for the 'from' form. Numeric. *Default: \code{NULL}*.
}
}

\examples{
recipe <- init_equating() |> add_design("common-item")
# Add a linear method that runs both Tucker and Chained equating
recipe <- recipe |> add_method("linear", type = c("tucker", "chained"))
# Add a mean equating method (slope fixed to 1)
recipe <- recipe |> add_method("linear", type = "tucker", mean_only = TRUE)
}
